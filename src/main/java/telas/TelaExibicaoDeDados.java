/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import com.github.britooo.looca.api.core.Looca;
import com.github.britooo.looca.api.group.discos.Disco;
import com.github.britooo.looca.api.group.discos.DiscoGrupo;
import com.github.britooo.looca.api.group.memoria.Memoria;
import com.github.britooo.looca.api.group.processador.Processador;
import com.github.britooo.looca.api.group.processos.Processo;
import com.github.britooo.looca.api.group.processos.ProcessoGrupo;
import com.github.britooo.looca.api.group.servicos.Servico;
import com.github.britooo.looca.api.group.servicos.ServicoGrupo;
import com.github.britooo.looca.api.util.Conversor;
import database.Database;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;


/**
 *
 * @author Usuário
 */
public class TelaExibicaoDeDados extends javax.swing.JFrame {

    Looca looca = new Looca();
    Utilitarios util = new Utilitarios();
    Database db = new Database();
    private Integer fkTotem;
    private Integer freqAlerta;
    private Integer cpuAlerta;
    private Integer cpuCritico;
    private Integer ramAlerta;
    private Integer ramCritico;
    private Integer hdAlerta;
    private Integer hdCritico;

    /**
     * Creates new form TelaExibicaoDeDados
     */
    public TelaExibicaoDeDados() {
        initComponents();
        util.InserirIcone(this);
    }

    public TelaExibicaoDeDados(
            Integer fkTotem,
            Integer freqAlerta,
            Integer cpuAlerta,
            Integer cpuCritico,
            Integer ramAlerta,
            Integer ramCritico,
            Integer hdAlerta,
            Integer hdCritico) {
        initComponents();
        util.InserirIcone(this);
        this.fkTotem = fkTotem;
        this.freqAlerta = freqAlerta;
        this.cpuAlerta = cpuAlerta;
        this.cpuCritico = cpuCritico;
        this.ramAlerta = ramAlerta;
        this.ramCritico = ramCritico;
        this.hdAlerta = hdAlerta;
        this.hdCritico = hdCritico;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lblInfoProcessadorFabricante = new javax.swing.JLabel();
        btnProcessador = new javax.swing.JButton();
        lblInfoProcessadorNome = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblInfoProcessadorCPUFisicas = new javax.swing.JLabel();
        lblInfoProcessadorCPULogica = new javax.swing.JLabel();
        lblInfoProcessadorEmUso = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblInfoRAMEmUso = new javax.swing.JLabel();
        lblInfoRAMDisponivel = new javax.swing.JLabel();
        lblInfoMemoriaMassaNome = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblInfoMemoriaMassaModelo = new javax.swing.JLabel();
        lblInfoMemoriaMassaTamanho = new javax.swing.JLabel();
        lblInfoRAMTotal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblDesempenho = new javax.swing.JLabel();
        lblInfoProcessosNome = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU = new javax.swing.JLabel();
        lblInfoProcessosNome3 = new javax.swing.JLabel();
        lblInfoProcessosNome2 = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria2 = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU2 = new javax.swing.JLabel();
        lblInfoProcessos2 = new javax.swing.JLabel();
        lblInfoProcessosNome8 = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria3 = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU3 = new javax.swing.JLabel();
        lblInfoProcessos3 = new javax.swing.JLabel();
        lblInfoProcessosNome4 = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria4 = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU4 = new javax.swing.JLabel();
        lblInfoProcessos4 = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria5 = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU5 = new javax.swing.JLabel();
        lblInfoProcessos5 = new javax.swing.JLabel();
        lblInfoProcessosNome5 = new javax.swing.JLabel();
        lblInfoProcessosUsoCPU6 = new javax.swing.JLabel();
        lblInfoProcessos6 = new javax.swing.JLabel();
        lblInfoProcessosUsoMemoria6 = new javax.swing.JLabel();
        lblInfoProcessosNome6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Processador:");

        lblInfoProcessadorFabricante.setText("Fabricante:");
        lblInfoProcessadorFabricante.setMaximumSize(new java.awt.Dimension(200, 500));

        btnProcessador.setText("Atualizar Dados");
        btnProcessador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessadorActionPerformed(evt);
            }
        });

        lblInfoProcessadorNome.setText("Nome:");
        lblInfoProcessadorNome.setMaximumSize(new java.awt.Dimension(200, 500));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLabel2.setText("Dados do Computador");

        lblInfoProcessadorCPUFisicas.setText("Número de CPU Física:");
        lblInfoProcessadorCPUFisicas.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessadorCPULogica.setText("Número de CPU Lógica:");
        lblInfoProcessadorCPULogica.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessadorEmUso.setText("Em uso:");
        lblInfoProcessadorEmUso.setMaximumSize(new java.awt.Dimension(200, 500));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Memória RAM:");

        lblInfoRAMEmUso.setText("Em uso:");
        lblInfoRAMEmUso.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoRAMDisponivel.setText("Disponível:");
        lblInfoRAMDisponivel.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoMemoriaMassaNome.setText("Nome:");
        lblInfoMemoriaMassaNome.setMaximumSize(new java.awt.Dimension(200, 500));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Memória de Massa:");

        lblInfoMemoriaMassaModelo.setText("Modelo:");
        lblInfoMemoriaMassaModelo.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoMemoriaMassaTamanho.setText("Tamanho:");
        lblInfoMemoriaMassaTamanho.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoRAMTotal.setText("Total:");
        lblInfoRAMTotal.setMaximumSize(new java.awt.Dimension(200, 500));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setText("Carcaterísticas do Hardware:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setText("Processos:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Processador:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Memória RAM:");

        lblDesempenho.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblDesempenho.setText("Desempenho:");

        lblInfoProcessosNome.setText("Nome:");
        lblInfoProcessosNome.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessosNome3.setText("Processo 1:");
        lblInfoProcessosNome3.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome2.setText("Nome:");
        lblInfoProcessosNome2.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria2.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria2.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU2.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU2.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessos2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessos2.setText("Processo 2:");
        lblInfoProcessos2.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome8.setText("Nome:");
        lblInfoProcessosNome8.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria3.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria3.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU3.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU3.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessos3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessos3.setText("Processo 3:");
        lblInfoProcessos3.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome4.setText("Nome:");
        lblInfoProcessosNome4.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria4.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria4.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU4.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU4.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessos4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessos4.setText("Processo 4:");
        lblInfoProcessos4.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria5.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria5.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU5.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU5.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessos5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessos5.setText("Processo 5:");
        lblInfoProcessos5.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome5.setText("Nome:");
        lblInfoProcessosNome5.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoCPU6.setText("Uso de CPU:");
        lblInfoProcessosUsoCPU6.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessos6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblInfoProcessos6.setText("Processo 6:");
        lblInfoProcessos6.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosUsoMemoria6.setText("Uso de memória:");
        lblInfoProcessosUsoMemoria6.setMaximumSize(new java.awt.Dimension(200, 500));

        lblInfoProcessosNome6.setText("Nome:");
        lblInfoProcessosNome6.setMaximumSize(new java.awt.Dimension(200, 500));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(208, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(334, 334, 334))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(0, 0, Short.MAX_VALUE)
                                            .addComponent(jLabel1)
                                            .addGap(401, 401, 401))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblInfoProcessadorFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblInfoProcessadorCPULogica, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessadorCPUFisicas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessadorNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(98, 98, 98))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnProcessador, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(lblInfoProcessadorEmUso, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblInfoRAMEmUso, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(lblInfoRAMDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblInfoProcessosUsoCPU, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblInfoProcessosNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblInfoProcessosUsoMemoria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblInfoProcessosNome3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblInfoProcessos4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblInfoProcessosUsoMemoria4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblInfoProcessosNome4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblInfoProcessosUsoCPU4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblInfoProcessosUsoCPU2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosNome2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosUsoMemoria2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblInfoProcessos2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblInfoProcessos3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblInfoProcessosUsoMemoria3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosNome8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosUsoCPU3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblInfoProcessos6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblInfoProcessosUsoMemoria6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosNome6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(lblInfoProcessos5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblInfoProcessosUsoMemoria5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosNome5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblInfoProcessosUsoCPU5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblInfoProcessosUsoCPU6, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(48, 48, 48))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(lblInfoRAMTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(lblInfoMemoriaMassaTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInfoMemoriaMassaModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInfoMemoriaMassaNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(786, Short.MAX_VALUE)
                    .addComponent(lblDesempenho)
                    .addGap(304, 304, 304)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInfoProcessadorFabricante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInfoProcessadorEmUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInfoRAMEmUso, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInfoProcessadorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblInfoRAMDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblInfoProcessadorCPUFisicas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblInfoProcessadorCPULogica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(lblInfoProcessosNome3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblInfoRAMTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblInfoProcessosNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblInfoProcessosUsoMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblInfoProcessosUsoCPU, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInfoProcessos4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosNome4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoMemoria4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoCPU4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInfoProcessos2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosNome2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoMemoria2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoCPU2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInfoProcessos5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosNome5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoMemoria5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoCPU5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInfoProcessos3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosNome8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoMemoria3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoCPU3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblInfoProcessos6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosNome6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoMemoria6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblInfoProcessosUsoCPU6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(68, 68, 68)
                        .addComponent(btnProcessador)
                        .addGap(67, 67, 67))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(lblInfoMemoriaMassaNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblInfoMemoriaMassaModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblInfoMemoriaMassaTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(103, 103, 103)
                    .addComponent(lblDesempenho)
                    .addContainerGap(575, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessadorActionPerformed
        // TODO add your handling code here:
        exibirDados();
        inserirDados();
    }//GEN-LAST:event_btnProcessadorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaExibicaoDeDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaExibicaoDeDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaExibicaoDeDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaExibicaoDeDados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaExibicaoDeDados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcessador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lblDesempenho;
    private javax.swing.JLabel lblInfoMemoriaMassaModelo;
    private javax.swing.JLabel lblInfoMemoriaMassaNome;
    private javax.swing.JLabel lblInfoMemoriaMassaTamanho;
    private javax.swing.JLabel lblInfoProcessadorCPUFisicas;
    private javax.swing.JLabel lblInfoProcessadorCPULogica;
    private javax.swing.JLabel lblInfoProcessadorEmUso;
    private javax.swing.JLabel lblInfoProcessadorFabricante;
    private javax.swing.JLabel lblInfoProcessadorNome;
    private javax.swing.JLabel lblInfoProcessos2;
    private javax.swing.JLabel lblInfoProcessos3;
    private javax.swing.JLabel lblInfoProcessos4;
    private javax.swing.JLabel lblInfoProcessos5;
    private javax.swing.JLabel lblInfoProcessos6;
    private javax.swing.JLabel lblInfoProcessosNome;
    private javax.swing.JLabel lblInfoProcessosNome2;
    private javax.swing.JLabel lblInfoProcessosNome3;
    private javax.swing.JLabel lblInfoProcessosNome4;
    private javax.swing.JLabel lblInfoProcessosNome5;
    private javax.swing.JLabel lblInfoProcessosNome6;
    private javax.swing.JLabel lblInfoProcessosNome8;
    private javax.swing.JLabel lblInfoProcessosUsoCPU;
    private javax.swing.JLabel lblInfoProcessosUsoCPU2;
    private javax.swing.JLabel lblInfoProcessosUsoCPU3;
    private javax.swing.JLabel lblInfoProcessosUsoCPU4;
    private javax.swing.JLabel lblInfoProcessosUsoCPU5;
    private javax.swing.JLabel lblInfoProcessosUsoCPU6;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria2;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria3;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria4;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria5;
    private javax.swing.JLabel lblInfoProcessosUsoMemoria6;
    private javax.swing.JLabel lblInfoRAMDisponivel;
    private javax.swing.JLabel lblInfoRAMEmUso;
    private javax.swing.JLabel lblInfoRAMTotal;
    // End of variables declaration//GEN-END:variables

    public void exibirDados() {
        Processador processador = looca.getProcessador();
        System.out.println(processador);
        lblInfoProcessadorFabricante.setText("Fabricante: " + processador.getFabricante());
        lblInfoProcessadorNome.setText("Nome: " + processador.getNome());
        lblInfoProcessadorCPUFisicas.setText("Número de CPU Física: " + processador.getNumeroCpusFisicas().toString());
        lblInfoProcessadorCPULogica.setText("Número de CPU Lógica: " + processador.getNumeroCpusLogicas().toString());
        lblInfoProcessadorEmUso.setText(String.format("Em uso: %.2f", processador.getUso()));

        Memoria memoria = looca.getMemoria();
        System.out.println(memoria);
        String memoriaEmUso = Conversor.formatarBytes(memoria.getEmUso());
        String memoriaTotal = Conversor.formatarBytes(memoria.getTotal());
        String memoriaDisponivel = Conversor.formatarBytes(memoria.getDisponivel());

        lblInfoRAMEmUso.setText(String.format("Em uso: %s", memoriaEmUso));
        lblInfoRAMDisponivel.setText(String.format("Disponível: %s", memoriaDisponivel));
        lblInfoRAMTotal.setText(String.format("Total: %s", memoriaTotal));

        DiscoGrupo grupoDeDiscos = looca.getGrupoDeDiscos();
        List<Disco> discos = grupoDeDiscos.getDiscos();
        for (Disco disco : discos) {
            System.out.println(disco);

            lblInfoMemoriaMassaNome.setText(String.format("Nome: %s", disco.getNome()));
            lblInfoMemoriaMassaModelo.setText(String.format("Modelo: %s", disco.getModelo()));
            lblInfoMemoriaMassaTamanho.setText(String.format("Tamanho: %s", Conversor.formatarBytes(disco.getTamanho())));

        }

        ProcessoGrupo grupoDeProcesso = new ProcessoGrupo();
        List<Processo> processos = grupoDeProcesso.getProcessos();
        List<Processo> processosLabel = new ArrayList<Processo>();
        for (int i = 0; i < processos.size(); i++) {
            if (processos.get(i).getUsoCpu() > 2) {
                processosLabel.add(processos.get(i));

            }
        }
        lblInfoProcessosNome.setText(String.format("Nome: %s", processosLabel.get(0).getNome()));
        System.out.println(processosLabel.get(0).getPid());
        lblInfoProcessosUsoMemoria.setText(String.format("Uso de memória: %.2f", processosLabel.get(0).getUsoMemoria()));
        lblInfoProcessosUsoCPU.setText(String.format("Uso da CPU: %.2f", processosLabel.get(0).getUsoCpu()));

        lblInfoProcessosNome2.setText(String.format("Nome: %s", processosLabel.get(1).getNome()));
        lblInfoProcessosUsoMemoria2.setText(String.format("Uso de memória: %.2f", processosLabel.get(1).getUsoMemoria()));
        lblInfoProcessosUsoCPU2.setText(String.format("Uso da CPU: %.2f", processosLabel.get(1).getUsoCpu()));

        lblInfoProcessosNome8.setText(String.format("Nome: %s", processosLabel.get(2).getNome()));
        lblInfoProcessosUsoMemoria3.setText(String.format("Uso de memória: %.2f", processosLabel.get(2).getUsoMemoria()));
        lblInfoProcessosUsoCPU3.setText(String.format("Uso da CPU: %.2f", processosLabel.get(2).getUsoCpu()));

        lblInfoProcessosNome4.setText(String.format("Nome: %s", processosLabel.get(3).getNome()));
        lblInfoProcessosUsoMemoria4.setText(String.format("Uso de memória: %.2f", processosLabel.get(3).getUsoMemoria()));
        lblInfoProcessosUsoCPU4.setText(String.format("Uso da CPU: %.2f", processosLabel.get(3).getUsoCpu()));

        lblInfoProcessosNome5.setText(String.format("Nome: %s", processosLabel.get(4).getNome()));
        lblInfoProcessosUsoMemoria5.setText(String.format("Uso de memória: %.2f", processosLabel.get(4).getUsoMemoria()));
        lblInfoProcessosUsoCPU5.setText(String.format("Uso da CPU: %.2f", processosLabel.get(4).getUsoCpu()));

        lblInfoProcessosNome6.setText(String.format("Nome: %s", processosLabel.get(5).getNome()));
        lblInfoProcessosUsoMemoria6.setText(String.format("Uso de memória: %.2f", processosLabel.get(5).getUsoMemoria()));
        lblInfoProcessosUsoCPU6.setText(String.format("Uso da CPU: %.2f", processosLabel.get(5).getUsoCpu()));

    }

    public void inserirDados() {
        Integer intervalo = freqAlerta * 1000;
        Processador processador = looca.getProcessador();
        String usoProcessador = String.format("%.0f", processador.getUso());

        Memoria memoria = looca.getMemoria();
        Double memoriaEmUso = memoria.getEmUso() / 1073741824.0;
        Double memoriaTotal = memoria.getTotal() / 1073741824.0;
        Double porcentagemRam = memoriaEmUso * 100 / memoriaTotal;
        String porcentagemRamFinal = String.format("%.0f", porcentagemRam);

        DiscoGrupo grupoDeDiscos = looca.getGrupoDeDiscos();
        Double memoriaMassaDisponivel = grupoDeDiscos.getVolumes().get(1).getDisponivel() / 1073741824.0;
        Double memoriaMassaTotal = grupoDeDiscos.getVolumes().get(1).getTotal() / 1073741824.0;
        Double porcentagemMemoriaMassa = 100 - memoriaMassaDisponivel * 100 / memoriaMassaTotal;
        String porcentagemMemoriaMassaFinal = String.format("%.0f", porcentagemMemoriaMassa);

        String statusCPU;
        String statusRam;
        String statusHd;
        if (cpuAlerta < processador.getUso()) {
            statusCPU = "Saudavel";
        } else if (cpuCritico < processador.getUso()) {
            statusCPU = "Alerta";
        } else {
            statusCPU = "Critico";
        }

        if (ramAlerta < porcentagemRam) {
            statusRam = "Saudavel";
        } else if (ramCritico < porcentagemRam) {
            statusRam = "Alerta";
        } else {
            statusRam = "Critico";
        }

        if (hdAlerta < porcentagemMemoriaMassa) {
            statusHd = "Saudavel";
        } else if (hdAlerta < porcentagemMemoriaMassa) {
            statusHd = "Alerta";
        } else {
            statusHd = "Critico";
        }

        System.out.println("fkTotem");
        System.out.println(fkTotem);
        System.out.println(statusCPU);
        System.out.println(statusRam);
        System.out.println(statusHd);
        System.out.println(porcentagemMemoriaMassaFinal);
        System.out.println(porcentagemMemoriaMassa);
        System.out.println(memoriaMassaDisponivel);
        System.out.println(memoriaMassaTotal);
        System.out.println(intervalo);
        
        db.inserirDados(usoProcessador, porcentagemRamFinal, porcentagemMemoriaMassaFinal, statusCPU, statusRam, statusHd, fkTotem);
        new Timer().scheduleAtFixedRate(new TimerTask() {
        @Override
        public void run() {
            inserirDados();
        }
    }, 0, intervalo);

    }

    

}
